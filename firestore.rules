rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user document
    // Users can also read other users' documents (for transaction display)
    match /users/{userId} {
      // Allow write only for own document
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // Allow read for own document or any authenticated user (for transaction user names)
      // This is safe because we only expose user names, not sensitive data
      allow read: if request.auth != null;
    }
    
    // Pocket rules - simplified for better reliability
    match /pockets/{pocketId} {
      // Allow read if user is authenticated
      allow read: if request.auth != null;
      
      // Allow write if user is authenticated and either:
      // - Creating a new pocket and is in participants
      // - Updating existing pocket and is already a participant
      allow write: if request.auth != null && (
        // For creating new pockets
        (resource == null && request.auth.uid in request.resource.data.participants) ||
        // For updating existing pockets where user is a participant
        (resource != null && request.auth.uid in resource.data.participants) ||
        // For joining pockets (adding self to participants)
        (resource != null && request.auth.uid in request.resource.data.participants)
      );
    }
    
    // Transaction rules - simplified for better performance
    match /transactions/{transactionId} {
      // Allow read for any authenticated user (they'll only see transactions for pockets they have access to via client-side logic)
      allow read: if request.auth != null;
      
      // Allow create if user is authenticated and is the creator of the transaction
      allow create: if request.auth != null && 
        'userId' in request.resource.data &&
        request.auth.uid == request.resource.data.userId;
      
      // Allow update/delete if user is authenticated and is the creator of the transaction
      allow update, delete: if request.auth != null && 
        'userId' in resource.data &&
        request.auth.uid == resource.data.userId;
    }
  }
} 